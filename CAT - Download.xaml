<Activity mc:Ignorable="sap sap2010" x:Class="CAT___Download" this:CAT___Download.Host="camsftp.cambridge.org" this:CAT___Download.User="camsarchive" this:CAT___Download.Password="Cams@rchivE2022!" this:CAT___Download.Port="2222" this:CAT___Download.Protocol="SFTP - SSH File Transfer Protocol" this:CAT___Download.str_filePath="/BuilderUpload/Pending" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:p="http://schemas.uipath.com/workflow/activities/ftp" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Host" Type="InArgument(x:String)" />
    <x:Property Name="User" Type="InArgument(x:String)" />
    <x:Property Name="Password" Type="InArgument(x:String)" />
    <x:Property Name="Port" Type="InArgument(x:Int32)" />
    <x:Property Name="Protocol" Type="InArgument(x:String)" />
    <x:Property Name="str_filePath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1136,5957.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>CAT___Download_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.CV</x:String>
      <x:String>UiPath.Shared.ObjectLibrary</x:String>
      <x:String>UiPath.CV.Activities</x:String>
      <x:String>UiPath.CV.Activities.Interfaces</x:String>
      <x:String>Reusable_Steps_Library</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Platform.Triggers</x:String>
      <x:String>UiPath.Platform.Triggers.Scope</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.FTP</x:String>
      <x:String>UiPath.FTP.Enums</x:String>
      <x:String>UiPath.FTP.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.CV.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Reusable Steps Library</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word.Activities</AssemblyReference>
      <AssemblyReference>UiPath.FTP</AssemblyReference>
      <AssemblyReference>UiPath.FTP.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Extensions.DependencyModel</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="CAT___Download" sap:VirtualizedContainerService.HintSize="644,5892.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <p:WithFtpSession ClientCertificatePassword="{x:Null}" ClientCertificatePath="{x:Null}" ContinueOnError="False" DisplayName="With ftp session" sap:VirtualizedContainerService.HintSize="602,6488" Host="[Host]" sap2010:WorkflowViewState.IdRef="WithFtpSession_1" Password="[Password]" Port="[Port]" UseSftp="True" Username="[User]">
      <p:WithFtpSession.Body>
        <ActivityAction x:TypeArguments="p:IFtpSession">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="p:IFtpSession" Name="FtpSession" />
          </ActivityAction.Argument>
          <Sequence sap:VirtualizedContainerService.HintSize="568,6402" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="526,6310" sap2010:WorkflowViewState.IdRef="Sequence_2">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Boolean" Name="aws_files" />
                <Variable x:TypeArguments="x:Boolean" Name="mp3_files" />
                <Variable x:TypeArguments="x:Boolean" Name="mp4_files" />
                <Variable x:TypeArguments="x:Boolean" Name="nsc_files" />
                <Variable x:TypeArguments="x:Boolean" Name="POnline_files" />
                <Variable x:TypeArguments="x:Boolean" Name="pdf_files" />
                <Variable x:TypeArguments="x:Boolean" Name="sco_files" />
                <Variable x:TypeArguments="x:Boolean" Name="vis_files" />
                <Variable x:TypeArguments="x:Boolean" Name="zip_files" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <p:DirectoryExists ContinueOnError="False" DisplayName="Directory exists" Exists="[aws_files]" sap:VirtualizedContainerService.HintSize="484,80" sap2010:WorkflowViewState.IdRef="DirectoryExists_1" RemotePath="/BuilderUpload/Pending/Audio with subtitles" />
              <If Condition="[aws_files]" sap:VirtualizedContainerService.HintSize="484,535.333333333333" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="360.666666666667,346" sap2010:WorkflowViewState.IdRef="Sequence_12">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:FileExists Exists="{x:Null}" ContinueOnError="False" DisplayName="File exists" sap:VirtualizedContainerService.HintSize="318.666666666667,80" sap2010:WorkflowViewState.IdRef="FileExists_1" RemotePath="/BuilderUpload/Pending/Audio with subtitles" />
                    <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download files" sap:VirtualizedContainerService.HintSize="318.666666666667,134" sap2010:WorkflowViewState.IdRef="DownloadFiles_6" LocalPath="FileZilla Reusables" Overwrite="False" Recursive="False" RemotePath="/BuilderUpload/Pending/Audio with subtitles" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_13">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <p:DirectoryExists ContinueOnError="False" DisplayName="Directory exists" Exists="[mp3_files]" sap:VirtualizedContainerService.HintSize="484,80" sap2010:WorkflowViewState.IdRef="DirectoryExists_2" RemotePath="/BuilderUpload/Pending/mp3" />
              <If Condition="[mp3_files]" sap:VirtualizedContainerService.HintSize="484,535.333333333333" sap2010:WorkflowViewState.IdRef="If_2">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="326,346" sap2010:WorkflowViewState.IdRef="Sequence_14">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:FileExists Exists="{x:Null}" ContinueOnError="False" DisplayName="File exists" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="FileExists_2" RemotePath="/BuilderUpload/Pending/mp3" />
                    <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download files" sap:VirtualizedContainerService.HintSize="284,134" sap2010:WorkflowViewState.IdRef="DownloadFiles_7" LocalPath="FileZilla Reusables" Overwrite="False" Recursive="False" RemotePath="/BuilderUpload/Pending/mp3" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_15">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <p:DirectoryExists ContinueOnError="False" DisplayName="Directory exists" Exists="[mp4_files]" sap:VirtualizedContainerService.HintSize="484,80" sap2010:WorkflowViewState.IdRef="DirectoryExists_3" RemotePath="/BuilderUpload/Pending/mp4" />
              <If Condition="[mp4_files]" sap:VirtualizedContainerService.HintSize="484,535.333333333333" sap2010:WorkflowViewState.IdRef="If_3">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="326,346" sap2010:WorkflowViewState.IdRef="Sequence_16">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:FileExists Exists="{x:Null}" ContinueOnError="False" DisplayName="File exists" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="FileExists_3" RemotePath="/BuilderUpload/Pending/mp4" />
                    <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download files" sap:VirtualizedContainerService.HintSize="284,134" sap2010:WorkflowViewState.IdRef="DownloadFiles_8" LocalPath="FileZilla Reusables" Overwrite="False" Recursive="False" RemotePath="/BuilderUpload/Pending/mp4" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_17">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <p:DirectoryExists ContinueOnError="False" DisplayName="Directory exists" Exists="[nsc_files]" sap:VirtualizedContainerService.HintSize="484,80" sap2010:WorkflowViewState.IdRef="DirectoryExists_4" RemotePath="/BuilderUpload/Pending/NSC" />
              <If Condition="[nsc_files]" sap:VirtualizedContainerService.HintSize="484,535.333333333333" sap2010:WorkflowViewState.IdRef="If_4">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="326,346" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:FileExists Exists="{x:Null}" ContinueOnError="False" DisplayName="File exists" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="FileExists_4" RemotePath="/BuilderUpload/Pending/NSC" />
                    <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download files" sap:VirtualizedContainerService.HintSize="284,134" sap2010:WorkflowViewState.IdRef="DownloadFiles_9" LocalPath="FileZilla Reusables" Overwrite="False" Recursive="False" RemotePath="/BuilderUpload/Pending/NSC" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_19">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <p:DirectoryExists ContinueOnError="False" DisplayName="Directory exists" Exists="[POnline_files]" sap:VirtualizedContainerService.HintSize="484,80" sap2010:WorkflowViewState.IdRef="DirectoryExists_5" RemotePath="/BuilderUpload/Pending/P+ Online" />
              <If Condition="[POnline_files]" sap:VirtualizedContainerService.HintSize="484,535.333333333333" sap2010:WorkflowViewState.IdRef="If_5">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="326,346" sap2010:WorkflowViewState.IdRef="Sequence_20">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:FileExists Exists="{x:Null}" ContinueOnError="False" DisplayName="File exists" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="FileExists_5" RemotePath="/BuilderUpload/Pending/P+ Online" />
                    <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download files" sap:VirtualizedContainerService.HintSize="284,134" sap2010:WorkflowViewState.IdRef="DownloadFiles_10" LocalPath="FileZilla Reusables" Overwrite="False" Recursive="False" RemotePath="/BuilderUpload/Pending/P+ Online" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_21">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <p:DirectoryExists ContinueOnError="False" DisplayName="Directory exists" Exists="[pdf_files]" sap:VirtualizedContainerService.HintSize="484,80" sap2010:WorkflowViewState.IdRef="DirectoryExists_6" RemotePath="/BuilderUpload/Pending/pdf" />
              <If Condition="[pdf_files]" sap:VirtualizedContainerService.HintSize="484,535.333333333333" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="326,346" sap2010:WorkflowViewState.IdRef="Sequence_22">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:FileExists Exists="{x:Null}" ContinueOnError="False" DisplayName="File exists" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="FileExists_6" RemotePath="/BuilderUpload/Pending/pdf" />
                    <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download files" sap:VirtualizedContainerService.HintSize="284,134" sap2010:WorkflowViewState.IdRef="DownloadFiles_11" LocalPath="FileZilla Reusables" Overwrite="False" Recursive="False" RemotePath="/BuilderUpload/Pending/pdf" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <p:DirectoryExists ContinueOnError="False" DisplayName="Directory exists" Exists="[sco_files]" sap:VirtualizedContainerService.HintSize="484,80" sap2010:WorkflowViewState.IdRef="DirectoryExists_7" RemotePath="/BuilderUpload/Pending/SCO" />
              <If Condition="[sco_files]" sap:VirtualizedContainerService.HintSize="484,535.333333333333" sap2010:WorkflowViewState.IdRef="If_7">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="326,346" sap2010:WorkflowViewState.IdRef="Sequence_24">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:FileExists Exists="{x:Null}" ContinueOnError="False" DisplayName="File exists" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="FileExists_7" RemotePath="/BuilderUpload/Pending/SCO" />
                    <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download files" sap:VirtualizedContainerService.HintSize="284,134" sap2010:WorkflowViewState.IdRef="DownloadFiles_12" LocalPath="FileZilla Reusables" Overwrite="False" Recursive="False" RemotePath="/BuilderUpload/Pending/SCO" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_25">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <p:DirectoryExists ContinueOnError="False" DisplayName="Directory exists" Exists="[vis_files]" sap:VirtualizedContainerService.HintSize="484,80" sap2010:WorkflowViewState.IdRef="DirectoryExists_8" RemotePath="/BuilderUpload/Pending/Video with subtitles" />
              <If Condition="[vis_files]" sap:VirtualizedContainerService.HintSize="484,535.333333333333" sap2010:WorkflowViewState.IdRef="If_8">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="360,346" sap2010:WorkflowViewState.IdRef="Sequence_26">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:FileExists Exists="{x:Null}" ContinueOnError="False" DisplayName="File exists" sap:VirtualizedContainerService.HintSize="318,80" sap2010:WorkflowViewState.IdRef="FileExists_8" RemotePath="/BuilderUpload/Pending/Video with subtitles" />
                    <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download files" sap:VirtualizedContainerService.HintSize="318,134" sap2010:WorkflowViewState.IdRef="DownloadFiles_13" LocalPath="FileZilla Reusables" Overwrite="False" Recursive="False" RemotePath="/BuilderUpload/Pending/Video with subtitles" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_27">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
              <p:DirectoryExists ContinueOnError="False" DisplayName="Directory exists" Exists="[zip_files]" sap:VirtualizedContainerService.HintSize="484,80" sap2010:WorkflowViewState.IdRef="DirectoryExists_9" RemotePath="/BuilderUpload/Pending/Zip" />
              <If Condition="[zip_files]" sap:VirtualizedContainerService.HintSize="484,535.333333333333" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="326,346" sap2010:WorkflowViewState.IdRef="Sequence_28">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:FileExists Exists="{x:Null}" ContinueOnError="False" DisplayName="File exists" sap:VirtualizedContainerService.HintSize="284,80" sap2010:WorkflowViewState.IdRef="FileExists_9" RemotePath="/BuilderUpload/Pending/Zip" />
                    <p:DownloadFiles ContinueOnError="False" Create="False" DisplayName="Download files" sap:VirtualizedContainerService.HintSize="284,134" sap2010:WorkflowViewState.IdRef="DownloadFiles_14" LocalPath="FileZilla Reusables" Overwrite="False" Recursive="False" RemotePath="/BuilderUpload/Pending/Zip" />
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="200,84" sap2010:WorkflowViewState.IdRef="Sequence_29">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </p:WithFtpSession.Body>
    </p:WithFtpSession>
  </Sequence>
</Activity>